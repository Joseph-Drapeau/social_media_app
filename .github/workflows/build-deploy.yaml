name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      POSTGRES_HOSTNAME: ${{secrets.POSTGRES_HOSTNAME}}
      POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      HASHING_ALGORITHM: ${{secrets.HASHING_ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}


    services:
      postgres:
        image: postgres:12.9
        env:
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    

    runs-on: ubuntu-20.04
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.10.1
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.1"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${secrets.REPO_NAME}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  deploy:
    environment:
      name: deploy
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2      
      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.POSTGRES_HOSTNAME:}}
          username: ${{secrets.POSTGRES_USER:}}
          password: ${{secrets.POSTGRES_PASSWORD:}}
          script: |
            cd app/src
            git pull
            echo ${{secrets.POSTGRES_PASSWORD:}} | sudo -S systemctl restart api